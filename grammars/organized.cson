scopeName: 'source.organized'
name: 'organized'
fileTypes: [
  'org'
  'organized'
]

patterns: [
    { include: "#headers" }
    { include: "#starlines" }
    { include: "#othertextcontent"}
    { include: "#textheaders"}
]

repository:
  headers:
    patterns: [
      {
        name: 'constant.headername.organized'
        match: '^#\\+[^:]+:'
      }
    ]
  starlines:
    patterns: [
      {
        name: 'meta.starline.organized'
        match: '^(\\s*)([-+\\*]+ .*)$'
        captures: {
          1:
              name: 'whitespace.starline.organized'
          2:
              patterns: [
                { include: "#startextcontent" }
              ]
        }
      }
    ]
  starpatterns:
    patterns: [
      {
        name: 'level1'
        match: '([-+\\*])(.*)'
        captures: {
          1:
            name: 'level1.star'
          2:
            patterns: [
              { include: "#textcontent"}
            ]
        }
      },
      {
        name: 'level2'
        match: '([-+\\*]{2})(.*)'
        captures: {
          1:
            name: 'level2.star'
          2:
            patterns: [
              { include: "#textcontent"}
            ]
        }
      },
      {
        name: 'level3'
        match: '([-+\\*]{3})(.*)'
        captures: {
          1:
            name: 'level3.star'
          2:
            patterns: [
              { include: "#textcontent"}
            ]
        }
      },
      {
        name: 'level4'
        match: '([-+\\*]{4})(.*)'
        captures: {
          1:
            name: 'level4.star'
          2:
            patterns: [
              { include: "#textcontent"}
            ]
        }
      },
      {
        name: 'level5'
        match: '([-+\\*]{5})(.*)'
        captures: {
          1:
            name: 'level5.star'
          2:
            patterns: [
              { include: "#textcontent"}
            ]
        }
      },
      {
        name: 'level6'
        match: '([-+\\*]{6})(.*)'
        captures: {
          1:
            name: 'level6.star'
          2:
            patterns: [
              { include: "#textcontent"}
            ]
        }
      },
      {
        name: 'level7'
        match: '([-+\\*]{7})(.*)'
        captures: {
          1:
            name: 'level7.star'
          2:
            patterns: [
              { include: "#textcontent"}
            ]
        }
      },
      {
        name: 'level8'
        match: '([-+\\*]{8})(.*)'
        captures: {
          1:
            name: 'level8.star'
          2:
            patterns: [
              { include: "#textcontent"}
            ]
        }
      },
      {
        name: 'level9'
        match: '([-+\\*]{9})(.*)'
        captures: {
          1:
            name: 'level9.star'
          2:
            patterns: [
              { include: "#textcontent"}
            ]
        }
      },
      {
        name: 'deeplevel'
        match: '([-+\\*]{10,})(.*)'
        captures: {
          1:
            name: 'deep.star'
          2:
            patterns: [
              { include: "#textcontent"}
            ]
        }
      }
    ]
  startextcontent:
    patterns:[
      {
        name: 'link.url.organized'
        #       protocol       host   port   path     Query params                          Link
        match: "(http|https)://[^?/]+(:\\d+)?(/[^?]+)?(\\?[A-Za-z0-9-._~:/?@!$&'*+,;=%]+)"
      },
      {
        name: 'todo.organized'
        match: "\\[TODO\\]"
      },
      {
        name: 'completed.organized'
        match: "\\[COMPLETED\\]"
      },
      {
        name: 'tags.organized'
        match: ":([^:]+:){1,}"
      }
    ]
  textheaders:
    patterns: [
      {
        name: 'header.level1'
        match: '^\s*(#)([^#].*)(\s*#\s*)?$'
        captures:
          1:
            name: 'header.level1.symbol'
          2:
            name: 'header.level1.line'
          3:
            name: 'header.level1.symbol'
      },
      {
        name: 'header.level2'
        match: '^\s*(##)([^#].*)(\s*##\s*)?$'
        captures:
          1:
            name: 'header.level2.symbol'
          2:
            name: 'header.level2.line'
          3:
            name: 'header.level2.symbol'
      },
      {
        name: 'header.level3'
        match: '^\s*(###)([^#].*)(\s*###\s*)?$'
        captures:
          1:
            name: 'header.level3.symbol'
          2:
            name: 'header.level3.line'
          3:
            name: 'header.level3.symbol'
      },
      {
        name: 'header.level4'
        match: '^\s*(####)([^#].*)(\s*####\s*)?$'
        captures:
          1:
            name: 'header.level4.symbol'
          2:
            name: 'header.level4.line'
          3:
            name: 'header.level4.symbol'
      },
      {
        name: 'header.level5'
        match: '^\s*(#####)([^#].*)(\s*#####\s*)?$'
        captures:
          1:
            name: 'header.level5.symbol'
          2:
            name: 'header.level5.line'
          3:
            name: 'header.level5.symbol'
      },
      {
        name: 'header.level6'
        match: '^\s*(######)([^#].*)(\s*######\s*)?$'
        captures:
          1:
            name: 'header.level6.symbol'
          2:
            name: 'header.level6.line'
          3:
            name: 'header.level6.symbol'
      }
    ]
  othertextcontent:
    patterns: [
      {
        name: 'scheduled.meta'
        match: "\s*(SCHEDULED)(:) (\\<)([^\\>]+)(\\>)"
        captures: {
          1:
            name: 'tag'
          2:
            name: 'colon'
          3:
            name: 'begintimeblock'
          4:
            name: 'timeblock'
          5:
            name: 'endtimeblock'
        }
      },
      {
        name: 'coffee.code.block.completed'
        begin: '(```)(coffee|coffeescript)'
        captures: [
          0:
            name: 'code.block.tag.completed'
          1:
            name: 'code.block.language.completed'
        ]
        contentName: "source.coffee"
        patterns: [
          {
            include: '#embedded-code'
          }
          {
            include: 'source.coffee'
          }
        ]
        end: '```'
      },
      {
        name: 'css.code.block.completed'
        begin: '(```)(css)'
        captures: [
          0:
            name: 'code.block.tag.completed'
          1:
            name: 'code.block.language.completed'
        ]
        contentName: "source.css"
        patterns: [
          {
            include: '#embedded-code'
          }
          {
            include: 'source.css'
          }
        ]
        end: '```'
      },
      {
        name: 'html.code.block.completed'
        begin: '(```)(html)'
        captures: [
          0:
            name: 'code.block.tag.completed'
          1:
            name: 'code.block.language.completed'
        ]
        contentName: "source.html"
        patterns: [
          {
            include: '#embedded-code'
          }
          {
            include: 'source.html'
          }
        ]
        end: '```'
      },
      {
        name: 'java.code.block.completed'
        begin: '(```)(java)'
        captures: [
          0:
            name: 'code.block.tag.completed'
          1:
            name: 'code.block.language.completed'
        ]
        contentName: "source.java"
        patterns: [
          {
            include: '#embedded-code'
          }
          {
            include: 'source.java'
          }
        ]
        end: '(```)'
      },
      {
        name: 'javascript.code.block.completed'
        begin: '(```)(js|javascript)'
        captures: [
          0:
            name: 'code.block.tag.completed'
          1:
            name: 'code.block.language.completed'
        ]
        contentName: "source.js"
        patterns: [
          {
            include: '#embedded-code'
          }
          {
            include: 'source.js'
          }
        ]
        end: '(```)'
      },
      {
        name: 'less.code.block.completed'
        begin: '(```)(less)'
        captures: [
          0:
            name: 'code.block.tag.completed'
          1:
            name: 'code.block.language.completed'
        ]
        contentName: "source.css.less"
        patterns: [
          {
            include: '#embedded-code'
          }
          {
            include: 'source.css.less'
          }
        ]
        end: '(```)'
      },
      {
        name: 'python.code.block.completed'
        begin: '(```)(python)'
        captures: [
          0:
            name: 'code.block.tag.completed'
          1:
            name: 'code.block.language.completed'
        ]
        contentName: "source.python"
        patterns: [
          {
            include: '#embedded-code'
          }
          {
            include: 'source.python'
          }
        ]
        end: '(```)'
      }
      {
        name: 'shell.code.block.completed'
        begin: '(```)(shell)$'
        captures: [
          0:
            name: 'code.block.tag.completed'
          1:
            name: 'code.block.language.completed'
        ]
        contentName: "source.shell"
        patterns: [
          {
            include: '#embedded-code'
          }
          {
            include: 'source.shell'
          }
        ]
        end: '(```)'
      }
      {
        name: 'sql.code.block.completed'
        begin: '(```)(sql|SQL)$'
        captures: [
          0:
            name: 'code.block.tag.completed'
          1:
            name: 'code.block.language.completed'
        ]
        contentName: "source.sql"
        patterns: [
          {
            include: '#embedded-code'
          }
          {
            include: 'source.sql'
          }
        ]
        end: '(```)'
      }
    ]
